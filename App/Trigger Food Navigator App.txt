{/* Notifications Modal */}
        {showNotificationModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Notifications
                </h2>
                <button 
                  onClick={() => setShowNotificationModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                {notifications.length > 0 ? (
                  <div className="space-y-3">
                    {notifications.map(notification => (
                      <div 
                        key={notification.id}
                        className={`p-3 rounded-lg border-l-4 ${notification.read ? 'opacity-60' : ''}`}
                        style={{ 
                          borderColor: notification.type === 'update' ? colors.primary : 
                                       notification.type === 'recipe' ? colors.highlight : 
                                       colors.accent,
                          backgroundColor: notification.type === 'update' ? colors.primary + '05' : 
                                          notification.type === 'recipe' ? colors.highlight + '05' : 
                                          colors.accent + '05'
                        }}
                      >
                        <div className="flex justify-between mb-1">
                          <h3 className="text-sm font-medium">{notification.title}</h3>
                          <span className="text-xs text-gray-500">{notification.date}</span>
                        </div>
                        <p className="text-xs line-clamp-2">{news.preview}</p>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <Bell size={40} className="mx-auto mb-3 text-gray-300" />
                    <p className="text-gray-500">No new notifications</p>
                  </div>
                )}
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => {
                    const updatedNotifications = notifications.map(n => ({...n, read: true}));
                    setNotifications(updatedNotifications);
                  }}
                >
                  Mark all as read
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: 'white' }}
                  onClick={() => setShowNotificationModal(false)}
                >
                  Close
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Community Tips Modal */}
        {showCommunityModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-2xl max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Community Tips & Support
                </h2>
                <button 
                  onClick={() => setShowCommunityModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                <div className="mb-6">
                  <div className="flex justify-between items-center mb-4">
                    <h3 className="font-medium">Popular Community Tips</h3>
                    <div className="flex gap-2">
                      <select className="text-xs p-1 border rounded">
                        <option>Most Popular</option>
                        <option>Newest First</option>
                        <option>Oldest First</option>
                      </select>
                      <select className="text-xs p-1 border rounded">
                        <option>All Categories</option>
                        <option>Diet Tips</option>
                        <option>Symptom Management</option>
                        <option>Lifestyle</option>
                      </select>
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    {communityTips.map(tip => (
                      <div 
                        key={tip.id}
                        className="p-4 rounded-lg"
                        style={{ backgroundColor: colors.secondary + '05' }}
                      >
                        <div className="flex justify-between mb-2">
                          <h4 className="font-medium text-sm">{tip.username}</h4>
                          <span className="text-xs text-gray-500">{tip.date}</span>
                        </div>
                        <p className="text-sm mb-3">{tip.tip}</p>
                        <div className="flex justify-between items-center">
                          <div className="flex items-center text-sm">
                            <button className="mr-1 text-red-500">
                              <HeartIcon size={16} />
                            </button>
                            <span>{tip.likes}</span>
                          </div>
                          <div className="flex gap-2">
                            <button 
                              className="text-xs"
                              style={{ color: colors.primary }}
                            >
                              Reply
                            </button>
                            <button
                              className="text-xs"
                              style={{ color: colors.accent }}
                            >
                              Save
                            </button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                
                <div className="mb-6">
                  <h3 className="font-medium mb-3">Share Your Experience</h3>
                  <div className="p-4 rounded-lg border">
                    <textarea
                      placeholder="Share a tip that has helped you manage your IBS symptoms..."
                      className="w-full p-3 border rounded h-24 mb-3"
                    ></textarea>
                    <div className="flex justify-between items-center">
                      <div className="flex gap-2">
                        <select className="text-xs p-1 border rounded">
                          <option>Diet Tips</option>
                          <option>Symptom Management</option>
                          <option>Lifestyle</option>
                          <option>Mental Health</option>
                        </select>
                      </div>
                      <button
                        className="px-4 py-2 rounded text-sm"
                        style={{ backgroundColor: colors.primary, color: 'white' }}
                      >
                        Share Tip
                      </button>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-3">Upcoming Community Events</h3>
                  <div className="space-y-3">
                    <div className="p-3 rounded-lg border">
                      <h4 className="text-sm font-medium mb-1">Live Q&A: Managing IBS Flare-ups</h4>
                      <div className="flex items-center text-xs text-gray-500 mb-2">
                        <Calendar size={14} className="mr-1" />
                        <span>March 15, 2025 - 6:00 PM EST</span>
                      </div>
                      <p className="text-xs mb-3">
                        Join Dr. Sarah Miller, gastroenterologist, for a live session about
                        managing IBS flare-ups and practical strategies for symptom relief.
                      </p>
                      <button
                        className="text-xs"
                        style={{ color: colors.primary }}
                      >
                        Add to calendar
                      </button>
                    </div>
                    
                    <div className="p-3 rounded-lg border">
                      <h4 className="text-sm font-medium mb-1">Virtual Cooking Class: IBS-Friendly Meals</h4>
                      <div className="flex items-center text-xs text-gray-500 mb-2">
                        <Calendar size={14} className="mr-1" />
                        <span>March 22, 2025 - 2:00 PM EST</span>
                      </div>
                      <p className="text-xs mb-3">
                        Learn to prepare delicious meals that avoid common IBS triggers
                        with Chef Michael Roberts, specialized in digestive health cuisine.
                      </p>
                      <button
                        className="text-xs"
                        style={{ color: colors.primary }}
                      >
                        Register
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.accent, color: 'white' }}
                  onClick={() => {
                    window.open('#', '_blank');
                  }}
                >
                  Join Support Group
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: 'white' }}
                  onClick={() => setShowCommunityModal(false)}
                >
                  Close
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Settings Modal with Cloud Sync */}
        {showSettings && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Settings
                </h2>
                <button 
                  onClick={() => setShowSettings(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-6">
                {/* Account Information - Same as before */}
                
                {/* New Cloud Sync Section */}
                <div>
                  <h3 className="font-medium mb-3 pb-1 border-b">Cloud Sync & Data</h3>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <ToggleSwitch 
                        label="Sync Data with Cloud"
                        isEnabled={isConnected}
                        onChange={() => setIsConnected(!isConnected)}
                      />
                    </div>
                    
                    <div className="rounded-lg p-3" style={{ backgroundColor: colors.primary + '10' }}>
                      <div className="flex items-center justify-between mb-2">
                        <div className="flex items-center">
                          <RefreshCw size={16} className="mr-2" style={{ color: colors.primary }} />
                          <h4 className="text-sm font-medium">Last synced</h4>
                        </div>
                        <span className="text-xs">{lastSynced}</span>
                      </div>
                      <button
                        className="w-full py-2 text-xs rounded font-medium"
                        style={{ backgroundColor: colors.primary, color: 'white' }}
                        onClick={() => {
                          setSyncing(true);
                          setTimeout(() => {
                            setSyncing(false);
                            setLastSynced(new Date().toLocaleString());
                            alert('Data synchronized successfully!');
                          }, 1000);
                        }}
                        disabled={!isConnected}
                      >
                        Sync Now
                      </button>
                    </div>
                    
                    <ToggleSwitch 
                      label="Auto-download Research Updates"
                      isEnabled={userSettings.notifications}
                      onChange={() => setUserSettings({...userSettings, notifications: !userSettings.notifications})}
                    />
                    
                    <ToggleSwitch 
                      label="Enable Offline Mode"
                      isEnabled={!isConnected}
                      onChange={() => setIsConnected(!isConnected)}
                    />
                  </div>
                </div>
                
                {/* Rest of settings sections remain the same */}
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowSettings(false)}
                >
                  Cancel
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Settings saved!');
                    setShowSettings(false);
                  }}
                >
                  Save Changes
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Elimination Diet Modal */}
        {showEliminationDietModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-2xl max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Personalized Elimination Diet Plan
                </h2>
                <button 
                  onClick={() => setShowEliminationDietModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                <div className="mb-5">
                  <p className="text-sm mb-3">
                    Based on your Trigger Food Navigator test results, we've created a structured elimination diet plan to help
                    you systematically eliminate trigger foods and monitor your body's response.
                  </p>
                  
                  <div className="bg-yellow-50 border-l-4 border-yellow-400 p-3 text-sm">
                    <h4 className="font-medium mb-1 flex items-center">
                      <AlertTriangle size={16} className="mr-1 text-yellow-600" />
                      Important
                    </h4>
                    <p className="text-xs">
                      This plan is designed to work with your healthcare provider. 
                      Consult with them before making significant dietary changes.
                    </p>
                  </div>
                </div>
                
                {/* Phase Information */}
                <div className="mb-5">
                  <h3 className="font-medium mb-3 pb-1 border-b">How This Plan Works</h3>
                  <div className="space-y-4">
                    <div className="flex">
                      <div 
                        className="w-10 h-10 rounded-full flex items-center justify-center mr-3 text-white font-bold"
                        style={{ backgroundColor: colors.primary }}
                      >
                        1
                      </div>
                      <div>
                        <h4 className="text-sm font-medium">Complete Elimination (2 weeks)</h4>
                        <p className="text-xs text-gray-600">Eliminate all 18 trigger foods identified in your Trigger Food Navigator test</p>
                      </div>
                    </div>
                    
                    <div className="flex">
                      <div 
                        className="w-10 h-10 rounded-full flex items-center justify-center mr-3 text-white font-bold"
                        style={{ backgroundColor: colors.accent }}
                      >
                        2
                      </div>
                      <div>
                        <h4 className="text-sm font-medium">Systematic Reintroduction (6-8 weeks)</h4>
                        <p className="text-xs text-gray-600">Gradually reintroduce one food at a time, monitoring for symptoms</p>
                      </div>
                    </div>
                    
                    <div className="flex">
                      <div 
                        className="w-10 h-10 rounded-full flex items-center justify-center mr-3 text-white font-bold"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        3
                      </div>
                      <div>
                        <h4 className="text-sm font-medium">Personalized Diet Plan</h4>
                        <p className="text-xs text-gray-600">Create your ongoing meal plan based on the results of the reintroduction phase</p>
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Current Phase */}
                <div className="mb-5">
                  <h3 className="font-medium mb-3 pb-1 border-b">Your Current Phase</h3>
                  <div 
                    className="rounded-lg p-4"
                    style={{ backgroundColor: colors.primary + '10' }}
                  >
                    <div className="flex justify-between items-center mb-2">
                      <h4 className="font-medium">Phase 1: Complete Elimination</h4>
                      <span 
                        className="px-2 py-1 rounded text-xs"
                        style={{ backgroundColor: colors.primary, color: 'white' }}
                      >
                        Day 8 of 14
                      </span>
                    </div>
                    
                    <div className="w-full bg-gray-200 rounded-full h-3 mb-3">
                      <div 
                        className="h-3 rounded-full" 
                        style={{ width: '57%', backgroundColor: colors.primary }}
                      ></div>
                    </div>
                    
                    <p className="text-sm mb-3">
                      During this phase, avoid all 18 trigger foods identified in your Trigger Food Navigator test. 
                      Focus on eating safe foods and monitoring your symptoms daily.
                    </p>
                    
                    <div className="grid grid-cols-2 gap-3">
                      <div>
                        <h5 className="text-sm font-medium mb-1">Goals</h5>
                        <ul className="text-xs space-y-1 list-disc list-inside">
                          <li>Completely eliminate all trigger foods</li>
                          <li>Track symptoms daily in the app</li>
                          <li>Maintain consistent meal times</li>
                          <li>Stay hydrated (64oz+ water daily)</li>
                        </ul>
                      </div>
                      <div>
                        <h5 className="text-sm font-medium mb-1">Next Steps</h5>
                        <ul className="text-xs space-y-1 list-disc list-inside">
                          <li>Continue elimination for 6 more days</li>
                          <li>Prepare for reintroduction phase</li>
                          <li>Review symptom tracker for baseline</li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Food Lists */}
                <div className="mb-5">
                  <h3 className="font-medium mb-3 pb-1 border-b">Foods to Avoid During Elimination</h3>
                  <div className="grid grid-cols-2 gap-3 mb-3">
                    <div>
                      <h4 className="text-sm font-medium mb-1">Group 1</h4>
                      <ul className="text-xs space-y-1">
                        {userFoods.avoid.slice(0, 9).map(food => (
                          <li key={food} className="flex items-center">
                            <span 
                              className="w-3 h-3 rounded-full mr-2"
                              style={{ backgroundColor: '#e74c3c' }}
                            ></span>
                            {food}
                          </li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <h4 className="text-sm font-medium mb-1">Group 2</h4>
                      <ul className="text-xs space-y-1">
                        {userFoods.avoid.slice(9).map(food => (
                          <li key={food} className="flex items-center">
                            <span 
                              className="w-3 h-3 rounded-full mr-2"
                              style={{ backgroundColor: '#e74c3c' }}
                            ></span>
                            {food}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                  
                  <div 
                    className="p-3 rounded-lg text-sm"
                    style={{ backgroundColor: colors.highlight + '15' }}
                  >
                    <h4 className="font-medium mb-1">Alternative Foods</h4>
                    <p className="text-xs mb-2">
                      Use these foods as safe alternatives during your elimination phase.
                    </p>
                    <div className="flex flex-wrap gap-2">
                      {userFoods.safe.map(food => (
                        <span 
                          key={food} 
                          className="px-2 py-1 rounded-full text-xs"
                          style={{ backgroundColor: colors.highlight, color: colors.secondary }}
                        >
                          {food}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
                
                {/* Meal Plan */}
                <div className="mb-5">
                  <h3 className="font-medium mb-3 pb-1 border-b">Suggested Meal Plan</h3>
                  <div className="space-y-3">
                    <div 
                      className="p-3 rounded-lg border"
                      style={{ borderColor: colors.primary + '30' }}
                    >
                      <h4 className="text-sm font-medium mb-1">Breakfast Options</h4>
                      <ul className="text-xs list-disc list-inside">
                        <li>Rice porridge with banana and cinnamon</li>
                        <li>Scrambled eggs with spinach and sweet potato hash</li>
                        <li>Smoothie with banana, berries, and rice protein</li>
                      </ul>
                    </div>
                    
                    <div 
                      className="p-3 rounded-lg border"
                      style={{ borderColor: colors.primary + '30' }}
                    >
                      <h4 className="text-sm font-medium mb-1">Lunch Options</h4>
                      <ul className="text-xs list-disc list-inside">
                        <li>Grilled chicken with rice and steamed carrots</li>
                        <li>Beef and vegetable stir-fry with rice noodles</li>
                        <li>Baked fish with sweet potato and spinach</li>
                      </ul>
                    </div>
                    
                    <div 
                      className="p-3 rounded-lg border"
                      style={{ borderColor: colors.primary + '30' }}
                    >
                      <h4 className="text-sm font-medium mb-1">Dinner Options</h4>
                      <ul className="text-xs list-disc list-inside">
                        <li>Rice bowl with grilled chicken and vegetables</li>
                        <li>Baked salmon with sweet potato and broccoli</li>
                        <li>Turkey patties with carrot and cucumber slices</li>
                      </ul>
                    </div>
                    
                    <div 
                      className="p-3 rounded-lg border"
                      style={{ borderColor: colors.primary + '30' }}
                    >
                      <h4 className="text-sm font-medium mb-1">Snack Options</h4>
                      <ul className="text-xs list-disc list-inside">
                        <li>Rice cakes with banana slices</li>
                        <li>Carrot and cucumber sticks</li>
                        <li>Small handful of almonds (if not a trigger)</li>
                        <li>Fresh fruit (apple, banana, berries)</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowEliminationDietModal(false)}
                >
                  Close
                </button>
                <div className="flex">
                  <button
                    className="px-4 py-2 rounded text-sm mr-2"
                    style={{ backgroundColor: colors.accent, color: 'white' }}
                    onClick={() => {
                      alert('Plan shared with your healthcare provider!');
                      setShowEliminationDietModal(false);
                    }}
                  >
                    Share with Provider
                  </button>
                  <button
                    className="px-4 py-2 rounded text-sm"
                    style={{ backgroundColor: colors.primary, color: 'white' }}
                    onClick={() => {
                      alert('Plan added to your meal planner!');
                      setShowEliminationDietModal(false);
                    }}
                  >
                    Add to Meal Planner
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
        
        {/* Feedback Modal */}
        {showFeedbackModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Send Feedback
                </h2>
                <button 
                  onClick={() => setShowFeedbackModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-4">
                <p className="text-sm">
                  We value your input! Share your thoughts about the Trigger Food Navigator to help us improve.
                </p>
                
                <div>
                  <label className="block text-sm font-medium mb-2">How would you rate your experience?</label>
                  <div className="flex justify-between px-6">
                    <button 
                      className="flex flex-col items-center opacity-50"
                      onClick={() => {}}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ backgroundColor: colors.secondary + '10' }}
                      >
                        <Frown size={30} />
                      </div>
                      <span className="text-xs">Poor</span>
                    </button>
                    <button 
                      className="flex flex-col items-center opacity-50"
                      onClick={() => {}}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ backgroundColor: colors.secondary + '10' }}
                      >
                        <Meh size={30} />
                      </div>
                      <span className="text-xs">Okay</span>
                    </button>
                    <button 
                      className="flex flex-col items-center opacity-100"
                      onClick={() => {}}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ backgroundColor: colors.highlight + '40' }}
                      >
                        <Smile size={30} style={{ color: colors.highlight }} />
                      </div>
                      <span className="text-xs">Great</span>
                    </button>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">What features do you find most useful?</label>
                  <div className="flex flex-wrap gap-2">
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.primary, color: 'white' }}
                    >
                      Meal Planner
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      Food Database
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      Symptom Tracker
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      Analytics
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      Recipes
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      Progress Tracking
                    </button>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Your Feedback</label>
                  <textarea
                    placeholder="Share any suggestions, issues, or features you'd like to see..."
                    className="w-full p-3 border rounded h-24"
                  ></textarea>
                </div>
                
                <div className="flex items-center">
                  <input type="checkbox" id="feedback-contact" className="mr-2" />
                  <label htmlFor="feedback-contact" className="text-xs">It's okay to contact me about my feedback</label>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowFeedbackModal(false)}
                >
                  Cancel
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: 'white' }}
                  onClick={() => {
                    alert('Thank you for your feedback!');
                    setShowFeedbackModal(false);
                  }}
                >
                  Submit Feedback
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Advanced Analytics Modal */}
        {showAnalyticsModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-4xl max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Detailed Symptom Analysis
                </h2>
                <button 
                  onClick={() => setShowAnalyticsModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                <div className="flex justify-between items-center mb-4">
                  <div>
                    <h3 className="font-medium">Daily Symptom Severity Trend</h3>
                    <p className="text-sm text-gray-600">Feb 23 - Mar 2, 2025</p>
                  </div>
                  <div className="flex">
                    <select className="text-xs p-1 border rounded mr-2">
                      <option>Last 7 days</option>
                      <option>Last 30 days</option>
                      <option>Custom range</option>
                    </select>
                    <button
                      className="p-1 rounded text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                    >
                      <Download size={14} />
                    </button>
                  </div>
                </div>
                
                <div className="mb-6">
                  <img src="/api/placeholder/700/300" alt="Detailed symptom trend chart" className="w-full rounded" />
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                  <div>
                    <h3 className="font-medium mb-3">Symptom Data Log</h3>
                    <div className="overflow-auto max-h-64">
                      <table className="min-w-full text-sm">
                        <thead>
                          <tr className="bg-gray-100">
                            <th className="p-2 text-left">Date</th>
                            <th className="p-2 text-left">Severity</th>
                            <th className="p-2 text-left">Triggers</th>
                            <th className="p-2 text-left">Notes</th>
                          </tr>
                        </thead>
                        <tbody>
                          {symptomData.map((entry, index) => (
                            <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : ''}>
                              <td className="p-2">{new Date(entry.date).toLocaleDateString()}</td>
                              <td className="p-2">
                                <div className="flex items-center">
                                  <span className="mr-2">{entry.severity}</span>
                                  <div className="w-12 bg-gray-200 rounded-full h-2">
                                    <div 
                                      className="h-2 rounded-full" 
                                      style={{ 
                                        width: `${(entry.severity / 10) * 100}%`, 
                                        backgroundColor: entry.severity > 5 ? '#e74c3c' : 
                                                       entry.severity > 3 ? colors.accent : 
                                                       colors.highlight 
                                      }}
                                    ></div>
                                  </div>
                                </div>
                              </td>
                              <td className="p-2">
                                {entry.triggers.length > 0 ? entry.triggers.join(', ') : '-'}
                              </td>
                              <td className="p-2">{entry.notes}</td>
                            </tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  </div>
                  
                  <div>
                    <h3 className="font-medium mb-3">Statistical Analysis</h3>
                    <div className="space-y-4">
                      <div className="p-3 rounded bg-gray-50">
                        <h4 className="text-sm font-medium mb-1">Average Symptom Severity</h4>
                        <div className="flex items-end">
                          <span className="text-2xl font-bold mr-2" style={{ color: colors.primary }}>3.9</span>
                          <span className="text-xs text-gray-500">out of 10</span>
                          <span className="ml-auto px-2 py-1 rounded-full text-xs" style={{ backgroundColor: colors.highlight + '20', color: colors.secondary }}>
                            <Trend value={-2.1} />
                          </span>
                        </div>
                        <p className="text-xs text-gray-600 mt-1">2.1 points lower than previous week</p>
                      </div>
                      
                      <div className="p-3 rounded bg-gray-50">
                        <h4 className="text-sm font-medium mb-1">Symptom-Free Days</h4>
                        <div className="flex items-end">
                          <span className="text-2xl font-bold mr-2" style={{ color: colors.primary }}>3</span>
                          <span className="text-xs text-gray-500">of 8 days</span>
                          <span className="ml-auto px-2 py-1 rounded-full text-xs" style={{ backgroundColor: colors.highlight + '20', color: colors.secondary }}>
                            <Trend value={2} />
                          </span>
                        </div>
                        <p className="text-xs text-gray-600 mt-1">2 more days than previous week</p>
                      </div>
                      
                      <div className="p-3 rounded bg-gray-50">
                        <h4 className="text-sm font-medium mb-1">Trigger Exposure</h4>
                        <div className="flex items-end">
                          <span className="text-2xl font-bold mr-2" style={{ color: colors.primary }}>3</span>
                          <span className="text-xs text-gray-500">exposures</span>
                          <span className="ml-auto px-2 py-1 rounded-full text-xs" style={{ backgroundColor: colors.highlight + '20', color: colors.secondary }}>
                            <Trend value={-4} />
                          </span>
                        </div>
                        <p className="text-xs text-gray-600 mt-1">4 fewer exposures than previous week</p>
                      </div>
                      
                      <div className="p-3 rounded" style={{ backgroundColor: colors.primary + '10' }}>
                        <h4 className="text-sm font-medium mb-1">Key Finding</h4>
                        <p className="text-xs">
                          Your symptom severity decreased by 54% during this period, strongly 
                          correlating with a 57% reduction in trigger food exposure.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div className="mb-6">
                  <h3 className="font-medium mb-3">Symptom Categories</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="p-3 rounded bg-gray-50">
                      <h4 className="text-sm font-medium mb-2 flex items-center">
                        <span 
                          className="w-3 h-3 rounded-full mr-2"
                          style={{ backgroundColor: colors.highlight }}
                        ></span>
                        Abdominal Pain
                      </h4>
                      <div className="flex flex-col">
                        <div className="grid grid-cols-7 gap-1 mb-1">
                          {[...Array(7)].map((_, i) => (
                            <div 
                              key={i} 
                              className="h-4 rounded"
                              style={{ 
                                backgroundColor: i < 4 ? `${colors.highlight}${20 + i * 20}` : colors.secondary + '10'
                              }}
                            ></div>
                          ))}
                        </div>
                        <div className="flex justify-between text-xs text-gray-500">
                          <span>None</span>
                          <span>Severe</span>
                        </div>
                      </div>
                      <div className="mt-2 text-xs">
                        <span className="font-medium">Avg: 3.1/10</span>
                        <span className="text-green-600 ml-2">↓ 42%</span>
                      </div>
                    </div>
                    
                    <div className="p-3 rounded bg-gray-50">
                      <h4 className="text-sm font-medium mb-2 flex items-center">
                        <span 
                          className="w-3 h-3 rounded-full mr-2"
                          style={{ backgroundColor: colors.accent }}
                        ></span>
                        Bloating
                      </h4>
                      <div className="flex flex-col">
                        <div className="grid grid-cols-7 gap-1 mb-1">
                          {[...Array(7)].map((_, i) => (
                            <div 
                              key={i} 
                              className="h-4 rounded"
                              style={{ 
                                backgroundColor: i < 5 ? `${colors.accent}${20 + i * 20}` : colors.secondary + '10'
                              }}
                            ></div>
                          ))}
                        </div>
                        <div className="flex justify-between text-xs text-gray-500">
                          <span>None</span>
                          <span>Severe</span>
                        </div>
                      </div>
                      <div className="mt-2 text-xs">
                        <span className="font-medium">Avg: 4.3/10</span>
                        <span className="text-green-600 ml-2">↓ 35%</span>
                      </div>
                    </div>
                    
                    <div className="p-3 rounded bg-gray-50">
                      <h4 className="text-sm font-medium mb-2 flex items-center">
                        <span 
                          className="w-3 h-3 rounded-full mr-2"
                          style={{ backgroundColor: colors.primary }}
                        ></span>
                        Bowel Habits
                      </h4>
                      <div className="flex flex-col">
                        <div className="grid grid-cols-7 gap-1 mb-1">
                          {[...Array(7)].map((_, i) => (
                            <div 
                              key={i} 
                              className="h-4 rounded"
                              style={{ 
                                backgroundColor: i < 3 ? `${colors.primary}${20 + i * 20}` : colors.secondary + '10'
                              }}
                            ></div>
                          ))}
                        </div>
                        <div className="flex justify-between text-xs text-gray-500">
                          <span>Normal</span>
                          <span>Irregular</span>
                        </div>
                      </div>
                      <div className="mt-2 text-xs">
                        <span className="font-medium">Avg: 2.6/10</span>
                        <span className="text-green-600 ml-2">↓ 61%</span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-3">Recommendations Based on Analysis</h3>
                  <div className="space-y-3">
                    <div className="p-3 rounded border-l-4" style={{ borderColor: colors.highlight, backgroundColor: colors.highlight + '05' }}>
                      <h4 className="text-sm font-medium mb-1">Continue Avoidance of Top Triggers</h4>
                      <p className="text-xs">
                        Data strongly supports that avoiding Wheat, Milk, and Sugar has led to significant
                        symptom reduction. Continue to strictly avoid these items.
                      </p>
                    </div>
                    
                    <div className="p-3 rounded border-l-4" style={{ borderColor: colors.primary, backgroundColor: colors.primary + '05' }}>
                      <h4 className="text-sm font-medium mb-1">Testing Moderate Triggers</h4>
                      <p className="text-xs">
                        Consider testing tolerance to Honey and Orange (one at a time) as 
                        their correlation with symptoms is lower than other triggers.
                      </p>
                    </div>
                    
                    <div className="p-3 rounded border-l-4" style={{ borderColor: colors.accent, backgroundColor: colors.accent + '05' }}>
                      <h4 className="text-sm font-medium mb-1">Hydration Focus</h4>
                      <p className="text-xs">
                        Your data shows better outcomes on days with higher water intake. 
                        Aim for 64+ oz daily, especially on days following any trigger exposure.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowAnalyticsModal(false)}
                >
                  Close
                </button>
                <div className="flex">
                  <button
                    className="px-4 py-2 rounded text-sm mr-2"
                    style={{ backgroundColor: colors.accent, color: 'white' }}
                    onClick={() => {
                      setShowAnalyticsModal(false);
                      setShowHealthcareModal(true);
                    }}
                  >
                    Share with Provider
                  </button>
                  <button
                    className="px-4 py-2 rounded text-sm"
                    style={{ backgroundColor: colors.primary, color: 'white' }}
                    onClick={() => {
                      alert('Report exported successfully!');
                      setShowAnalyticsModal(false);
                    }}
                  >
                    Export Report
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
        
        {/* Recipe Modal */}        {/* Analytics Tab */}
        {activeTab === 'analytics' && (
          <div>
            <div className="mb-4">
              <h2 className="text-lg font-semibold mb-2" style={{ color: colors.secondary }}>Advanced Analytics</h2>
              <p className="text-sm text-gray-600">Gain deeper insights into your IBS patterns and triggers</p>
            </div>
            
            {/* Analytics Dashboard */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div className="bg-white rounded-lg shadow p-4">
                <h3 className="font-medium mb-3">Symptom Severity Trend</h3>
                <div className="mb-2">
                  <img src="/api/placeholder/340/200" alt="Symptom trend line chart" className="w-full rounded" />
                </div>
                <div className="flex justify-between text-xs text-gray-600">
                  <span>Feb 23 - Mar 2, 2025</span>
                  <span 
                    className="cursor-pointer"
                    onClick={() => setShowAnalyticsModal(true)}
                    style={{ color: colors.primary }}
                  >
                    View Details
                  </span>
                </div>
              </div>
              
              <div className="bg-white rounded-lg shadow p-4">
                <h3 className="font-medium mb-3">Trigger Correlation</h3>
                <div className="mb-2">
                  <img src="/api/placeholder/340/200" alt="Trigger correlation chart" className="w-full rounded" />
                </div>
                <div className="flex justify-between text-xs text-gray-600">
                  <span>Based on 45 days of data</span>
                  <span 
                    className="cursor-pointer"
                    style={{ color: colors.primary }}
                  >
                    View Details
                  </span>
                </div>
              </div>
            </div>
            
            {/* Detailed Analytics */}
            <div className="bg-white rounded-lg shadow p-4 mb-4">
              <div className="flex justify-between items-center mb-3">
                <h3 className="font-medium">Food Trigger Analysis</h3>
                <div className="flex">
                  <select className="text-xs p-1 border rounded mr-2" defaultValue="30">
                    <option value="7">Last 7 days</option>
                    <option value="30">Last 30 days</option>
                    <option value="90">Last 90 days</option>
                    <option value="all">All time</option>
                  </select>
                  <button
                    className="text-xs p-1 rounded"
                    style={{ backgroundColor: colors.secondary + '15' }}
                  >
                    <Filter size={14} />
                  </button>
                </div>
              </div>
              
              <div className="space-y-3">
                <div>
                  <div className="flex justify-between mb-1">
                    <div className="flex items-center">
                      <span 
                        className="w-3 h-3 rounded-full mr-2"
                        style={{ backgroundColor: '#e74c3c' }}
                      ></span>
                      <span className="text-sm font-medium">Wheat</span>
                    </div>
                    <span className="text-sm">92% correlation with symptoms</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 rounded-full" 
                      style={{ width: '92%', backgroundColor: '#e74c3c' }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <div className="flex items-center">
                      <span 
                        className="w-3 h-3 rounded-full mr-2"
                        style={{ backgroundColor: '#e74c3c' }}
                      ></span>
                      <span className="text-sm font-medium">Milk</span>
                    </div>
                    <span className="text-sm">87% correlation with symptoms</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 rounded-full" 
                      style={{ width: '87%', backgroundColor: '#e74c3c' }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <div className="flex items-center">
                      <span 
                        className="w-3 h-3 rounded-full mr-2"
                        style={{ backgroundColor: '#e74c3c' }}
                      ></span>
                      <span className="text-sm font-medium">Sugar</span>
                    </div>
                    <span className="text-sm">78% correlation with symptoms</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 rounded-full" 
                      style={{ width: '78%', backgroundColor: '#e74c3c' }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <div className="flex items-center">
                      <span 
                        className="w-3 h-3 rounded-full mr-2"
                        style={{ backgroundColor: '#e74c3c' }}
                      ></span>
                      <span className="text-sm font-medium">Corn</span>
                    </div>
                    <span className="text-sm">65% correlation with symptoms</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 rounded-full" 
                      style={{ width: '65%', backgroundColor: '#e74c3c' }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <div className="flex items-center">
                      <span 
                        className="w-3 h-3 rounded-full mr-2"
                        style={{ backgroundColor: '#e74c3c' }}
                      ></span>
                      <span className="text-sm font-medium">Honey</span>
                    </div>
                    <span className="text-sm">52% correlation with symptoms</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 rounded-full" 
                      style={{ width: '52%', backgroundColor: '#e74c3c' }}
                    ></div>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Symptom Patterns */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div className="bg-white rounded-lg shadow p-4">
                <h3 className="font-medium mb-3">Symptom Patterns</h3>
                <div className="space-y-3">
                  <div className="flex items-start">
                    <div
                      className="w-8 h-8 rounded-full flex items-center justify-center mt-1 flex-shrink-0"
                      style={{ backgroundColor: colors.accent + '20', color: colors.accent }}
                    >
                      <AlertTriangle size={18} />
                    </div>
                    <div className="ml-3">
                      <h4 className="text-sm font-medium">Stress Amplification</h4>
                      <p className="text-xs text-gray-600">Stress appears to increase symptom severity by approximately 40%</p>
                    </div>
                  </div>
                  
                  <div className="flex items-start">
                    <div
                      className="w-8 h-8 rounded-full flex items-center justify-center mt-1 flex-shrink-0"
                      style={{ backgroundColor: colors.highlight + '20', color: colors.highlight }}
                    >
                      <Activity size={18} />
                    </div>
                    <div className="ml-3">
                      <h4 className="text-sm font-medium">Duration Pattern</h4>
                      <p className="text-xs text-gray-600">Symptoms typically last 24-36 hours following trigger exposure</p>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="bg-white rounded-lg shadow p-4">
                <h3 className="font-medium mb-3">Recovery Factors</h3>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Hydration</span>
                    <div className="flex">
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Stress Management</span>
                    <div className="flex">
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Consistent Meals</span>
                    <div className="flex">
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Sleep Quality</span>
                    <div className="flex">
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center"
                        style={{ backgroundColor: colors.highlight }}
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                      <span 
                        className="w-6 h-6 rounded-full flex items-center justify-center bg-gray-200"
                      >
                        <Check size={14} color="white" />
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            {/* AI Insights */}
            <div className="bg-white rounded-lg shadow p-4 mb-4">
              <h3 className="font-medium mb-3">AI-Powered Insights</h3>
              <div className="py-3 px-4 rounded-lg mb-3" style={{ backgroundColor: colors.primary + '10' }}>
                <div className="flex">
                  <div
                    className="w-10 h-10 rounded-full flex items-center justify-center mr-3 flex-shrink-0"
                    style={{ backgroundColor: colors.primary }}
                  >
                    <BulbIcon size={20} color="white" />
                  </div>
                  <div>
                    <h4 className="text-sm font-medium mb-1">Symptom Pattern Detected</h4>
                    <p className="text-xs text-gray-600">
                      Your symptoms have improved by 68% when you consistently avoid 
                      Wheat, Milk, and Sugar compared to days when any of these are consumed.
                    </p>
                  </div>
                </div>
              </div>
              
              <div className="py-3 px-4 rounded-lg mb-3" style={{ backgroundColor: colors.accent + '10' }}>
                <div className="flex">
                  <div
                    className="w-10 h-10 rounded-full flex items-center justify-center mr-3 flex-shrink-0"
                    style={{ backgroundColor: colors.accent }}
                  >
                    <BulbIcon size={20} color="white" />
                  </div>
                  <div>
                    <h4 className="text-sm font-medium mb-1">Meal Timing Insight</h4>
                    <p className="text-xs text-gray-600">
                      Your symptom tracker shows 42% fewer symptoms on days when you 
                      eat regular meals at consistent times compared to days with irregular eating patterns.
                    </p>
                  </div>
                </div>
              </div>
              
              <div className="py-3 px-4 rounded-lg" style={{ backgroundColor: colors.highlight + '10' }}>
                <div className="flex">
                  <div
                    className="w-10 h-10 rounded-full flex items-center justify-center mr-3 flex-shrink-0"
                    style={{ backgroundColor: colors.highlight }}
                  >
                    <BulbIcon size={20} color={colors.secondary} />
                  </div>
                  <div>
                    <h4 className="text-sm font-medium mb-1">Recommendation</h4>
                    <p className="text-xs text-gray-600">
                      Based on your data, increasing water intake to at least 64oz daily may help reduce 
                      bloating and abdominal discomfort. Your hydration has shown a strong correlation with symptom severity.
                    </p>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Action Buttons */}
            <div className="flex flex-wrap gap-3 mb-4">
              <button
                className="flex-1 py-2 px-3 rounded flex items-center justify-center"
                style={{ backgroundColor: colors.secondary, color: 'white' }}
                onClick={() => setShowReportModal(true)}
              >
                <FileText size={16} className="mr-2" />
                Generate Report
              </button>
              <button
                className="flex-1 py-2 px-3 rounded flex items-center justify-center"
                style={{ backgroundColor: colors.primary, color: 'white' }}
                onClick={() => setShowHealthcareModal(true)}
              >
                <UserPlus size={16} className="mr-2" />
                Share with Provider
              </button>
            </div>
          </div>
        )} items-center justify-center mt-1 flex-shrink-0"
                      style={{ backgroundColor: colors.primary + '20', color: colors.primary }}
                    >
                      <Clock size={18} />
                    </div>
                    <div className="ml-3">
                      <h4 className="text-sm font-medium">Time Delay</h4>
                      <p className="text-xs text-gray-600">Symptoms typically appear 4-6 hours after consuming trigger foods</p>
                    </div>
                  </div>
                  
                  <div className="flex items-start">
                    <div
                      className="w-8 h-8 rounded-full flex items-center justify-center mt-1 flex-shrink-0"
                      style={{ backgroundColor: colors.accent + '20', color: colors.accent }}
                    >
                      <AlertTriangle size={18} />
                    </div>
                    <div className="ml-3">
                      <h4 className="text-sm font-medium">Stress Amplification</h4>
                      <p className="text-xs text-gray-600">Stress appears to increase symptom severity by approximately 40%</p>
                    </div>
                  </div>
                  
                  <div className="flex items-start">
                    <div
                      className="w-8 h-8 rounded-full flex        {/* Journal Entry Modal */}
        {showJournalEntry && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Daily Journal Entry
                </h2>
                <button 
                  onClick={() => setShowJournalEntry(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">How are you feeling today?</label>
                  <div className="flex justify-between px-6">
                    <button 
                      className={`flex flex-col items-center ${journalMood === 'great' ? 'opacity-100' : 'opacity-50'}`}
                      onClick={() => setJournalMood('great')}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ 
                          backgroundColor: journalMood === 'great' ? colors.highlight + '40' : colors.secondary + '10',
                          color: journalMood === 'great' ? colors.highlight : colors.secondary
                        }}
                      >
                        <Smile size={30} />
                      </div>
                      <span className="text-xs">Great</span>
                    </button>
                    <button 
                      className={`flex flex-col items-center ${journalMood === 'neutral' ? 'opacity-100' : 'opacity-50'}`}
                      onClick={() => setJournalMood('neutral')}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ 
                          backgroundColor: journalMood === 'neutral' ? colors.primary + '40' : colors.secondary + '10',
                          color: journalMood === 'neutral' ? colors.primary : colors.secondary
                        }}
                      >
                        <Meh size={30} />
                      </div>
                      <span className="text-xs">Okay</span>
                    </button>
                    <button 
                      className={`flex flex-col items-center ${journalMood === 'bad' ? 'opacity-100' : 'opacity-50'}`}
                      onClick={() => setJournalMood('bad')}
                    >
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center mb-1"
                        style={{ 
                          backgroundColor: journalMood === 'bad' ? '#e74c3c40' : colors.secondary + '10',
                          color: journalMood === 'bad' ? '#e74c3c' : colors.secondary
                        }}
                      >
                        <Frown size={30} />
                      </div>
                      <span className="text-xs">Not well</span>
                    </button>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Journal Entry</label>
                  <textarea
                    value={journalText}
                    onChange={(e) => setJournalText(e.target.value)}
                    placeholder="Write about your symptoms, diet observations, or anything else you'd like to track today..."
                    className="w-full p-3 border rounded h-32"
                  ></textarea>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Quick Tags</label>
                  <div className="flex flex-wrap gap-2">
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setJournalText(prev => prev + ' #LowEnergy')}
                    >
                      #LowEnergy
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setJournalText(prev => prev + ' #Bloating')}
                    >
                      #Bloating
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setJournalText(prev => prev + ' #GoodDay')}
                    >
                      #GoodDay
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setJournalText(prev => prev + ' #StressedOut')}
                    >
                      #StressedOut
                    </button>
                    <button
                      className="px-3 py-1 rounded-full text-xs"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setJournalText(prev => prev + ' #CheatMeal')}
                    >
                      #CheatMeal
                    </button>
                  </div>
                </div>
                
                <div className="py-2 px-3 rounded-lg" style={{ backgroundColor: colors.highlight + '15' }}>
                  <h4 className="text-sm font-medium mb-1">Journaling Tip</h4>
                  <p className="text-xs">
                    Tracking your diet, symptoms, stress levels, and sleep can help identify patterns 
                    that affect your IBS. Try to journal at the same time each day for consistency.
                  </p>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-end">
                <button
                  className="px-4 py-2 rounded"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Journal entry saved!');
                    setShowJournalEntry(false);
                  }}
                >
                  Save Entry
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Settings Modal */}
        {showSettings && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Settings
                </h2>
                <button 
                  onClick={() => setShowSettings(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-6">
                <div>
                  <h3 className="font-medium mb-3 pb-1 border-b">Account Information</h3>
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium mb-1">Name</label>
                      <input
                        type="text"
                        value={userSettings.name}
                        onChange={(e) => setUserSettings({...userSettings, name: e.target.value})}
                        className="w-full p-2 border rounded"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium mb-1">Email</label>
                      <input
                        type="email"
                        value={userSettings.email}
                        onChange={(e) => setUserSettings({...userSettings, email: e.target.value})}
                        className="w-full p-2 border rounded"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium mb-1">Trigger Food Navigator Test Date</label>
                      <input
                        type="date"
                        value={userSettings.testDate}
                        onChange={(e) => setUserSettings({...userSettings, testDate: e.target.value})}
                        className="w-full p-2 border rounded"
                      />
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-3 pb-1 border-b">Dietary Preferences</h3>
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium mb-1">Daily Calorie Target</label>
                      <input
                        type="number"
                        value={userSettings.calorieTarget}
                        onChange={(e) => setUserSettings({...userSettings, calorieTarget: parseInt(e.target.value)})}
                        className="w-full p-2 border rounded"
                      />
                    </div>
                    <div>
                      <button
                        className="w-full py-2 px-3 rounded text-sm font-medium text-left flex justify-between items-center"
                        style={{ backgroundColor: colors.primary + '15', color: colors.primary }}
                        onClick={() => setShowHealthcareModal(true)}
                      >
                        <span>Manage Additional Dietary Restrictions</span>
                        <ChevronRight size={16} />
                      </button>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-3 pb-1 border-b">App Settings</h3>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <label className="text-sm">Notifications</label>
                      <div 
                        className={`w-12 h-6 rounded-full relative cursor-pointer ${userSettings.notifications ? 'bg-green-500' : 'bg-gray-300'}`}
                        onClick={() => setUserSettings({...userSettings, notifications: !userSettings.notifications})}
                      >
                        <div 
                          className={`absolute w-5 h-5 rounded-full bg-white top-0.5 transition-all ${userSettings.notifications ? 'right-0.5' : 'left-0.5'}`}
                        ></div>
                      </div>
                    </div>
                    <div className="flex items-center justify-between">
                      <label className="text-sm">Dark Mode</label>
                      <div 
                        className={`w-12 h-6 rounded-full relative cursor-pointer ${userSettings.darkMode ? 'bg-green-500' : 'bg-gray-300'}`}
                        onClick={() => setUserSettings({...userSettings, darkMode: !userSettings.darkMode})}
                      >
                        <div 
                          className={`absolute w-5 h-5 rounded-full bg-white top-0.5 transition-all ${userSettings.darkMode ? 'right-0.5' : 'left-0.5'}`}
                        ></div>
                      </div>
                    </div>
                    <div className="flex items-center justify-between">
                      <label className="text-sm">Share Anonymous Data for Research</label>
                      <div 
                        className={`w-12 h-6 rounded-full relative cursor-pointer ${userSettings.shareData ? 'bg-green-500' : 'bg-gray-300'}`}
                        onClick={() => setUserSettings({...userSettings, shareData: !userSettings.shareData})}
                      >
                        <div 
                          className={`absolute w-5 h-5 rounded-full bg-white top-0.5 transition-all ${userSettings.shareData ? 'right-0.5' : 'left-0.5'}`}
                        ></div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-3 pb-1 border-b">Data & Integration</h3>
                  <div className="space-y-2">
                    <button
                      className="w-full py-2 px-3 rounded text-sm font-medium text-left flex items-center"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setShowExportModal(true)}
                    >
                      <Download size={16} className="mr-2" />
                      Export Your Data
                    </button>
                    <button
                      className="w-full py-2 px-3 rounded text-sm font-medium text-left flex items-center"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setShowHealthcareModal(true)}
                    >
                      <UserPlus size={16} className="mr-2" />
                      Share with Healthcare Provider
                    </button>
                    <button
                      className="w-full py-2 px-3 rounded text-sm font-medium text-left flex items-center"
                      style={{ backgroundColor: colors.secondary + '15' }}
                      onClick={() => setShowReportModal(true)}
                    >
                      <FileText size={16} className="mr-2" />
                      Generate Progress Report
                    </button>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowSettings(false)}
                >
                  Cancel
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Settings saved!');
                    setShowSettings(false);
                  }}
                >
                  Save Changes
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Healthcare Provider Modal */}
        {showHealthcareModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Share with Healthcare Provider
                </h2>
                <button 
                  onClick={() => setShowHealthcareModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-4">
                <p className="text-sm">
                  Share your Trigger Food Navigator diet plan, symptom history, and progress with your healthcare provider.
                </p>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Provider's Email</label>
                  <input
                    type="email"
                    placeholder="doctor@example.com"
                    className="w-full p-2 border rounded"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Data to Share</label>
                  <div className="space-y-2">
                    <div className="flex items-center">
                      <input type="checkbox" id="share-diet" className="mr-2" defaultChecked />
                      <label htmlFor="share-diet" className="text-sm">Diet Plan & Food List</label>
                    </div>
                    <div className="flex items-center">
                      <input type="checkbox" id="share-symptoms" className="mr-2" defaultChecked />
                      <label htmlFor="share-symptoms" className="text-sm">Symptom History</label>
                    </div>
                    <div className="flex items-center">
                      <input type="checkbox" id="share-progress" className="mr-2" defaultChecked />
                      <label htmlFor="share-progress" className="text-sm">Progress & Analytics</label>
                    </div>
                    <div className="flex items-center">
                      <input type="checkbox" id="share-journal" className="mr-2" />
                      <label htmlFor="share-journal" className="text-sm">Journal Entries</label>
                    </div>
                  </div>
                </div>
                
                <div className="py-2 px-3 rounded-lg" style={{ backgroundColor: colors.primary + '10' }}>
                  <h4 className="text-sm font-medium mb-1" style={{ color: colors.primary }}>Privacy Note</h4>
                  <p className="text-xs">
                    Your provider will receive a secure link to view your selected data. This link will expire after 14 days.
                    You can revoke access at any time from your settings.
                  </p>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.secondary + '15' }}
                  onClick={() => setShowHealthcareModal(false)}
                >
                  Cancel
                </button>
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Invitation sent to healthcare provider!');
                    setShowHealthcareModal(false);
                  }}
                >
                  Send Invitation
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Export Data Modal */}
        {showExportModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Export Your Data
                </h2>
                <button 
                  onClick={() => setShowExportModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-4">
                <p className="text-sm">
                  Export your Trigger Food Navigator app data in various formats for your records or to share with healthcare providers.
                </p>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Select Data to Export</label>
                  <div className="space-y-2">
                    <div className="flex items-center">
                      <input type="checkbox" id="export-all" className="mr-2" defaultChecked />
                      <label htmlFor="export-all" className="text-sm">All Data</label>
                    </div>
                    <div className="flex items-center ml-6">
                      <input type="checkbox" id="export-meals" className="mr-2" defaultChecked />
                      <label htmlFor="export-meals" className="text-sm">Meal Plans</label>
                    </div>
                    <div className="flex items-center ml-6">
                      <input type="checkbox" id="export-symptoms" className="mr-2" defaultChecked />
                      <label htmlFor="export-symptoms" className="text-sm">Symptom History</label>
                    </div>
                    <div className="flex items-center ml-6">
                      <input type="checkbox" id="export-foods" className="mr-2" defaultChecked />
                      <label htmlFor="export-foods" className="text-sm">Food Lists & Sensitivities</label>
                    </div>
                    <div className="flex items-center ml-6">
                      <input type="checkbox" id="export-progress" className="mr-2" defaultChecked />
                      <label htmlFor="export-progress" className="text-sm">Progress & Analytics</label>
                    </div>
                    <div className="flex items-center ml-6">
                      <input type="checkbox" id="export-journal" className="mr-2" defaultChecked />
                      <label htmlFor="export-journal" className="text-sm">Journal Entries</label>
                    </div>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Export Format</label>
                  <div className="grid grid-cols-2 gap-2">
                    <button
                      className="p-3 border rounded flex flex-col items-center justify-center hover:bg-gray-50"
                      style={{ borderColor: colors.primary }}
                    >
                      <FileText size={24} style={{ color: colors.primary }} className="mb-1" />
                      <span className="text-sm font-medium">PDF Report</span>
                    </button>
                    <button
                      className="p-3 border rounded flex flex-col items-center justify-center hover:bg-gray-50"
                    >
                      <FileIcon type="csv" size={24} className="mb-1" />
                      <span className="text-sm font-medium">CSV</span>
                    </button>
                    <button
                      className="p-3 border rounded flex flex-col items-center justify-center hover:bg-gray-50"
                    >
                      <FileIcon type="json" size={24} className="mb-1" />
                      <span className="text-sm font-medium">JSON</span>
                    </button>
                    <button
                      className="p-3 border rounded flex flex-col items-center justify-center hover:bg-gray-50"
                    >
                      <Share size={24} className="mb-1" />
                      <span className="text-sm font-medium">Share Link</span>
                    </button>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Date Range</label>
                  <div className="flex gap-2">
                    <div className="flex-1">
                      <label className="text-xs">From</label>
                      <input type="date" className="w-full p-2 border rounded" defaultValue="2025-01-15" />
                    </div>
                    <div className="flex-1">
                      <label className="text-xs">To</label>
                      <input type="date" className="w-full p-2 border rounded" defaultValue="2025-03-02" />
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-end">
                <button
                  className="px-4 py-2 rounded text-sm"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Data exported successfully!');
                    setShowExportModal(false);
                  }}
                >
                  Export Data
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Progress Report Modal */}
        {showReportModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  Generate Progress Report
                </h2>
                <button 
                  onClick={() => setShowReportModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4 space-y-4">
                <p className="text-sm">
                  Create a comprehensive report of your IBS management progress to share with healthcare providers or for your personal records.
                </p>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Report Type</label>
                  <select className="w-full p-2 border rounded">
                    <option>Comprehensive Progress Report</option>
                    <option>Symptom Tracking Summary</option>
                    <option>Diet Adherence Report</option>
                    <option>Food Trigger Analysis</option>
                    <option>Custom Report</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">Time Period</label>
                  <select className="w-full p-2 border rounded">
                    <option>Last 7 Days</option>
                    <option>Last 30 Days</option>
                    <option>Last 3 Months</option>
                    <option>All Time</option>
                    <option>Custom Range</option>
                  </select>
                </div>
                
                <div className="flex gap-2 items-center">
                  <input type="checkbox" id="include-charts" defaultChecked />
                  <label htmlFor="include-charts" className="text-sm">Include charts and visualizations</label>
                </div>
                
                <div className="flex gap-2 items-center">
                  <input type="checkbox" id="include-recommendations" defaultChecked />
                  <label htmlFor="include-recommendations" className="text-sm">Include personalized recommendations</label>
                </div>
                
                <div className="py-2 px-3 rounded-lg" style={{ backgroundColor: colors.highlight + '15' }}>
                  <h4 className="text-sm font-medium mb-1">Report Preview</h4>
                  <img src="/api/placeholder/340/200" alt="Report preview" className="w-full rounded mb-2" />
                  <div className="flex justify-between text-xs text-gray-600">
                    <span>12 pages</span>
                    <span>Last updated: Today</span>
                  </div>
                </div>
              </div>
              
              <div className="p-4 border-t flex justify-between">
                <button
                  className="px-4 py-2 rounded text-sm flex items-center"
                  style={{ backgroundColor: colors.accent, color: colors.white }}
                  onClick={() => {
                    alert('Report saved as PDF!');
                    setShowReportModal(false);
                  }}
                >
                  <Download size={16} className="mr-1" />
                  Save as PDF
                </button>
                <button
                  className="px-4 py-2 rounded text-sm flex items-center"
                  style={{ backgroundColor: colors.primary, color: colors.white }}
                  onClick={() => {
                    alert('Report generated and ready to share!');
                    setShowReportModal(false);
                  }}
                >
                  <Share size={16} className="mr-1" />
                  Share Report
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Recipe Modal */}
                        {/* Recipe Modal */}
        {showRecipeModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-2xl max-h-screen overflow-y-auto">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  IBS-Friendly Recipe Suggestions
                </h2>
                <button 
                  onClick={() => setShowRecipeModal(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                {selectedRecipe ? (
                  <div>
                    <button
                      className="flex items-center text-sm mb-4"
                      style={{ color: colors.accent }}
                      onClick={() => setSelectedRecipe(null)}
                    >
                      <ChevronLeft size={16} className="mr-1" />
                      Back to recipes
                    </button>
                    
                    <div className="mb-4">
                      <img 
                        src={selectedRecipe.image} 
                        alt={selectedRecipe.name} 
                        className="w-full h-48 object-cover rounded-lg mb-3"
                      />
                      <h3 className="text-xl font-semibold mb-1">{selectedRecipe.name}</h3>
                      <p className="text-sm text-gray-600 mb-2">{selectedRecipe.description}</p>
                      
                      <div className="flex flex-wrap gap-2 mb-4">
                        <span className="text-xs px-2 py-1 rounded-full flex items-center" style={{ backgroundColor: colors.secondary + '15' }}>
                          <Clock size={12} className="mr-1" />
                          Prep: {selectedRecipe.prepTime} min
                        </span>
                        <span className="text-xs px-2 py-1 rounded-full flex items-center" style={{ backgroundColor: colors.secondary + '15' }}>
                          <Clock size={12} className="mr-1" />
                          Cook: {selectedRecipe.cookTime} min
                        </span>
                        <span className="text-xs px-2 py-1 rounded-full flex items-center" style={{ backgroundColor: colors.primary + '15', color: colors.primary }}>
                          {selectedRecipe.calories} calories
                        </span>
                        <span className="text-xs px-2 py-1 rounded-full flex items-center" style={{ backgroundColor: colors.highlight + '20', color: colors.secondary }}>
                          IBS-friendly
                        </span>
                      </div>
                    </div>
                    
                    <div className="grid grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-medium mb-2 pb-1 border-b">Ingredients</h4>
                        <div className="space-y-4">
                          {Object.entries(selectedRecipe.ingredientComponents || {}).map(([componentName, ingredients]) => (
                            <div key={componentName} className="mb-4">
                              <h5 className="font-medium text-sm mb-2 text-gray-700 uppercase tracking-wide">
                                {componentName}
                              </h5>
                              <ul className="space-y-2 ml-2">
                                {ingredients.map((ingredient, idx) => {
                                  // Extract base ingredient name for status checking (remove quantities/descriptions)
                                  const baseIngredient = ingredient.split('(')[0].trim();
                                  const status = getFoodStatus(baseIngredient);
                                  return (
                                    <li key={idx} className="flex items-center text-sm">
                                      <span 
                                        className="w-2 h-2 rounded-full mr-2 flex-shrink-0"
                                        style={{ 
                                          backgroundColor: 
                                            status === 'safe' ? colors.highlight : 
                                            status === 'moderate' ? colors.accent : 
                                            status === 'avoid' ? '#e74c3c' : 
                                            colors.secondary
                                        }}
                                      ></span>
                                      <span className="leading-relaxed">{ingredient}</span>
                                    </li>
                                  );
                                })}
                              </ul>
                            </div>
                          ))}
                        </div>
                        
                        <div className="mt-4">
                          <h4 className="font-medium mb-2 pb-1 border-b">Nutrition Information</h4>
                          <div className="grid grid-cols-2 gap-2 text-sm">
                            <div className="flex justify-between">
                              <span>Calories:</span>
                              <span>{selectedRecipe.calories}</span>
                            </div>
                            <div className="flex justify-between">
                              <span>Protein:</span>
                              <span>{selectedRecipe.protein}g</span>
                            </div>
                            <div className="flex justify-between">
                              <span>Carbs:</span>
                              <span>{selectedRecipe.carbs}g</span>
                            </div>
                            <div className="flex justify-between">
                              <span>Fat:</span>
                              <span>{selectedRecipe.fat}g</span>
                            </div>
                            <div className="flex justify-between">
                              <span>Fiber:</span>
                              <span>{selectedRecipe.fiber}g</span>
                            </div>
                          </div>
                        </div>
                      </div>
                      
                      <div>
                        <h4 className="font-medium mb-2 pb-1 border-b">Instructions</h4>
                        <ol className="space-y-2 list-decimal list-inside text-sm">
                          {selectedRecipe.instructions.map((step, idx) => (
                            <li key={idx}>{step}</li>
                          ))}
                        </ol>
                        
                        <div className="mt-4 p-3 rounded-lg" style={{ backgroundColor: colors.highlight + '15' }}>
                          <h4 className="font-medium text-sm mb-1">IBS-Friendly Notes</h4>
                          <p className="text-xs">
                            This recipe avoids all your identified trigger foods from the Trigger Food Navigator test. 
                            It's designed to be gentle on your digestive system while providing balanced nutrition.
                          </p>
                        </div>
                      </div>
                    </div>
                    
                    <div className="mt-6 flex justify-between">
                      <button
                        className="px-4 py-2 rounded text-sm flex items-center"
                        style={{ backgroundColor: colors.secondary + '15' }}
                        onClick={() => {
                          // Add ingredients to shopping list
                          const allIngredients = Object.values(selectedRecipe.ingredientComponents || {}).flat();
                          const newItems = allIngredients.filter(
                            ingredient => {
                              // Extract base ingredient name for comparison
                              const baseIngredient = ingredient.split('(')[0].trim();
                              return !shoppingList.some(item => item.name === baseIngredient);
                            }
                          ).map(ingredient => {
                            const baseIngredient = ingredient.split('(')[0].trim();
                            return { name: baseIngredient, checked: false };
                          });
                          
                          if (newItems.length > 0) {
                            setShoppingList([...shoppingList, ...newItems]);
                            alert('Ingredients added to shopping list!');
                          } else {
                            alert('All ingredients already in shopping list!');
                          }
                        }}
                      >
                        <ShoppingBag size={16} className="mr-1" />
                        Add to Shopping List
                      </button>
                      
                      <button
                        className="px-4 py-2 rounded text-sm"
                        style={{ backgroundColor: colors.primary, color: colors.white }}
                        onClick={() => {
                          // Create meal from recipe
                          const mealTime = new Date().getHours() < 12 ? '08:00' : 
                                         new Date().getHours() < 17 ? '12:30' : '18:00';
                          const mealName = new Date().getHours() < 12 ? 'Breakfast' :
                                         new Date().getHours() < 17 ? 'Lunch' : 'Dinner';
                                         
                          // Extract all ingredients from all components
                          const allIngredients = Object.values(selectedRecipe.ingredientComponents || {}).flat();
                          const baseIngredients = allIngredients.map(ingredient => ingredient.split('(')[0].trim());
                                         
                          const newMealItem = {
                            id: meals.length + 1,
                            name: mealName + ': ' + selectedRecipe.name,
                            time: mealTime,
                            foods: baseIngredients,
                            day: selectedDay
                          };
                          
                          setMeals([...meals, newMealItem]);
                          setShowRecipeModal(false);
                          alert('Recipe added to your meal plan!');
                        }}
                      >
                        Add to Meal Plan
                      </button>
                    </div>
                  </div>
                ) : (
                  <div>
                    <div className="mb-4">
                      <div className="relative">
                        <input
                          type="text"
                          placeholder="Search recipes..."
                          className="w-full p-2 pl-8 border rounded"
                        />
                        <Search size={16} className="absolute left-2 top-3 text-gray-400" />
                      </div>
                    </div>
                    
                    <div className="mb-4">
                      <h3 className="font-medium mb-2">Recommended for You</h3>
                      <p className="text-sm text-gray-600 mb-4">Based on your Trigger Food Navigator test results and safe foods</p>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {safeRecipes.map(recipe => (
                          <div 
                            key={recipe.id}
                            className="border rounded-lg overflow-hidden cursor-pointer hover:shadow-md transition-shadow"
                            onClick={() => setSelectedRecipe(recipe)}
                          >
                            <img 
                              src={recipe.image} 
                              alt={recipe.name} 
                              className="w-full h-32 object-cover"
                            />
                            <div className="p-3">
                              <h4 className="font-medium">{recipe.name}</h4>
                              <p className="text-xs text-gray-600 mb-2 line-clamp-2">{recipe.description}</p>
                              <div className="flex flex-wrap gap-1">
                                <span 
                                  className="text-xs px-2 py-1 rounded-full"
                                  style={{ backgroundColor: colors.highlight + '20', color: colors.secondary }}
                                >
                                  {recipe.calories} cal
                                </span>
                                <span 
                                  className="text-xs px-2 py-1 rounded-full"
                                  style={{ backgroundColor: colors.primary + '15', color: colors.primary }}
                                >
                                  {recipe.prepTime + recipe.cookTime} min
                                </span>
                                <span 
                                  className="text-xs px-2 py-1 rounded-full"
                                  style={{ backgroundColor: colors.accent + '15', color: colors.accent }}
                                >
                                  {Object.values(recipe.ingredientComponents || {}).flat().length} ingredients
                                </span>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h3 className="font-medium mb-2">Search by Categories</h3>
                      <div className="flex flex-wrap gap-2 mb-4">
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.primary, color: colors.white }}
                        >
                          Breakfast
                        </button>
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.secondary + '15' }}
                        >
                          Lunch
                        </button>
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.secondary + '15' }}
                        >
                          Dinner
                        </button>
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.secondary + '15' }}
                        >
                          Snacks
                        </button>
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.secondary + '15' }}
                        >
                          Quick Meals
                        </button>
                        <button 
                          className="px-3 py-1 rounded-full text-sm"
                          style={{ backgroundColor: colors.secondary + '15' }}
                        >
                          High Protein
                        </button>
                      </div>
                      
                      <div className="rounded-lg p-4 border border-dashed border-gray-300 text-center">
                        <h4 className="font-medium mb-2">Need Personalized Recipes?</h4>
                        <p className="text-sm text-gray-600 mb-3">Let us create a custom meal plan based on your preferences and Trigger Food Navigator results</p>
                        <button
                          className="px-4 py-2 rounded text-sm"
                          style={{ backgroundColor: colors.accent, color: colors.white }}
                        >
                          Create Custom Meal Plan
                        </button>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        )}
        
        {/* Food Info Modal */}
        {showFoodInfo && selectedFood && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg shadow-lg w-full max-w-md">
              <div className="p-4 border-b flex justify-between items-center">
                <h2 className="text-lg font-semibold" style={{ color: colors.secondary }}>
                  {selectedFood} Information
                </h2>
                <button 
                  onClick={() => setShowFoodInfo(false)}
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="p-4">
                {foodDatabase[selectedFood] ? (
                  <div>
                    <div className="mb-4">
                      <div className="flex justify-between mb-2">
                        <span className="font-medium">IBS Impact:</span>
                        <span 
                          className="px-2 py-1 rounded-full text-xs font-medium"
                          style={{ 
                            backgroundColor: userFoods.safe.includes(selectedFood) ? colors.highlight : 
                                            userFoods.moderate.includes(selectedFood) ? colors.accent : 
                                            '#e74c3c',
                            color: userFoods.avoid.includes(selectedFood) ? 'white' : colors.secondary
                          }}
                        >
                          {userFoods.safe.includes(selectedFood) ? 'Safe' : 
                           userFoods.moderate.includes(selectedFood) ? 'Moderate' : 
                           'Avoid'}
                        </span>
                      </div>
                      <p className="text-sm mb-3">{foodDatabase[selectedFood].ibsImpact}</p>
                      
                      <div className="py-2 px-3 mb-3 rounded" style={{ backgroundColor: colors.primary + '15' }}>
                        <p className="text-sm"><strong>FODMAP Content:</strong> {foodDatabase[selectedFood].fodmap}</p>
                      </div>
                    </div>
                    
                    <div className="mb-4">
                      <h3 className="font-medium mb-2">Nutritional Information (per 100g)</h3>
                      <div className="grid grid-cols-2 gap-2 text-sm">
                        <div className="flex justify-between">
                          <span>Calories:</span>
                          <span className="font-medium">{foodDatabase[selectedFood].calories} kcal</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Protein:</span>
                          <span className="font-medium">{foodDatabase[selectedFood].protein}g</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Carbs:</span>
                          <span className="font-medium">{foodDatabase[selectedFood].carbs}g</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Fat:</span>
                          <span className="font-medium">{foodDatabase[selectedFood].fat}g</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Fiber:</span>
                          <span className="font-medium">{foodDatabase[selectedFood].fiber}g</span>
                        </div>
                      </div>
                    </div>
                    
                    <div className="mb-4">
                      <h3 className="font-medium mb-2">Recommended Alternatives</h3>
                      <div className="flex flex-wrap gap-2">
                        {foodDatabase[selectedFood].alternatives.map(alt => (
                          <span 
                            key={alt} 
                            className="px-2 py-1 rounded text-sm"
                            style={{ backgroundColor: colors.secondary + '15' }}
                          >
                            {alt}
                          </span>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h3 className="font-medium mb-2">Tips</h3>
                      <p className="text-sm">{foodDatabase[selectedFood].tips}</p>
                    </div>
                  </div>
                ) : (
                  <p>No detailed information available for {selectedFood}.</p>
                )}
              </div>
              
              <div className="p-4 border-t flex justify-end">
                {userFoods.avoid.includes(selectedFood) ? (
                  <button
                    className="px-4 py-2 rounded text-sm"
                    style={{ backgroundColor: colors.highlight, color: colors.secondary }}
                  >
                    Add to Safe Foods List
                  </button>
                ) : (
                  <button
                    className="px-4 py-2 rounded text-sm"
                    style={{ backgroundColor: colors.primary, color: colors.white }}
                  >
                    Add to Shopping List
                  </button>
                )}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default InFoodsIBSPlanner;
